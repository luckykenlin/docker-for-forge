networks:
  proxy:
    external: true
    driver: bridge

services:
  {{ $webapp_name }}:
    restart: always
    build:
      context: .
      dockerfile: ./docker/production/Dockerfile
    image: {{ $webapp_vendor }}/{{ $webapp_name }}:${TAG:-latest}
    volumes:
      - ./.env:/var/www/html/.env
      - ./storage/app:/var/www/html/storage/app
      - ./storage/logs:/var/www/html/storage/logs
    networks:
      - proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.{{ $webapp_name }}.entryPoints=https
      - traefik.http.routers.{{ $webapp_name }}.rule=Host(`${TRAEFIK_HOST:-{{ $webapp_domain }}}`)
      - traefik.http.routers.{{ $webapp_name }}.service={{ $webapp_name }}
      - traefik.http.services.{{ $webapp_name }}.loadBalancer.server.port=80
      - traefik.http.routers.{{ $webapp_name }}.tls.certResolver=cloudflare

    mysql:
      image: 'bitnami/mysql:latest'
      container_name: mysql
      environment:
        - ALLOW_EMPTY_PASSWORD=yes
        - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
        - MYSQL_USER=${DB_USERNAME}
        - MYSQL_PASSWORD=${DB_PASSWORD}
        - MYSQL_DATABASE=${DB_DATABASE}
      networks:
        - proxy

    redis:
      image: bitnami/redis:latest
      container_name: redis
      restart: unless-stopped
      environment:
        - REDIS_PASSWORD=${REDIS_PASSWORD}
        - ALLOW_EMPTY_PASSWORD=yes
      networks:
        - proxy